
@model Fst_QRCode_eCheckIn.Models.RegistrationMdl

@{
    Layout = null;
    var departmentsList = ViewBag.Departments as List<Fst_QRCode_eCheckIn.Models.Department>;
    var employeesList = ViewBag.Employees as List<Fst_QRCode_eCheckIn.Models.Employee>;
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title></title>
    <link href="~/Content/StyleSheet.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.1.0/css/select2.min.css" rel="stylesheet" />
</head>
<body>
    <div class="container">
        <div class="content">
            <img class="cld-responsive" alt="header-image" src="https://res.cloudinary.com/debbsefe/image/upload/f_auto,c_fill,dpr_auto,e_grayscale/image_fz7n7w.webp">
            <h1 class="form-title">FASSET eCheck-In 2024_2</h1>
            @if (ViewBag.Message != null)
            {
                <div class="alert alert-success">@ViewBag.Message</div>
            }
            <form class="Form" action="@Url.Action("SubmitRegistration", "Registration")" method="post">
                <h5 style="text-align:center">
                    ENTER TOTP
                </h5>
                <div class="otp-container">
                    @for (int i = 0; i < 5; i++)
                    {
                        <input required class="otp-input" maxlength="1" name="otp[]" type="text" oninput="moveToNext(this, event, @i == 4)">
                    }
                </div>

                <div class="input-animated">
                    <input placeholder="DEPARTMENT" required="" list="departments" name="Department" id="department" type="text">
                    <label class="label-department" for="department"><span class="content-department">DEPARTMENT</span></label>
                    <datalist id="departments">
                        <option value="">Select a Department</option>
                        @if (departmentsList != null)
                        {
                            var departmentList = departmentsList.Take(5);
                            foreach (var department in departmentList)
                            {
                                <option value="@department.DepartmentName">@department.DepartmentName</option>
                            }
                        }
                    </datalist>
                </div>

                <div class="input-animated">
                    <input placeholder="EMPLOYEE" required="" list="employees" name="Employee" id="employee" type="text">
                    <label class="label-employee" for="employee"><span class="content-employee">EMPLOYEE</span></label>
                    <datalist id="employees">
                        <option value="">Select an Employee</option>
                        @if (employeesList != null)
                        {
                            var employeeList = employeesList.Take(5);
                            foreach (var employee in employeeList)
                            {
                                <option value="@employee.EmployeeName">@employee.EmployeeName</option>
                            }
                        }
                    </datalist>
                </div>

                @Html.HiddenFor(m => m.qrCodeImgUrl)
                @Html.HiddenFor(m => m.QRCodeTotp)

                <button type="submit" id="submit-button">Submit</button>
            </form>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.1.0/js/select2.min.js"></script>
    <script>
    $(document).ready(function () {
      // Handle department input change
        $('#department').on('input', function () {
            var inputVal = $(this).val();
            if (inputVal.length > 0) {
                $.ajax({
                    url: '@Url.Action("GetDepartments", "Registration")',
                    type: 'GET',
                    data: { term: inputVal },
                    success: function (data) {
                        var departmentList = $('#departments');
                        departmentList.empty();
                        departmentList.append('<option value="">Select a Department</option>');
                        $.each(data, function (index, department) {
                            departmentList.append('<option value="' + department.DepartmentName + '">' + department.DepartmentName + '</option>');
                        });
                    }
                });
            }
        });

        @*$('#employee').on('input', function () {
            var inputVal = $(this).val();
            if (inputVal.length > 0) {
                $.ajax({
                    url: '@Url.Action("GetEmployees", "Registration")',
                    type: 'GET',
                    data: { term: inputVal },
                    success: function (data) {
                        var employeeList = $('#employees');
                        employeeList.empty();
                        employeeList.append('<option value="">Select an Employee</option>');
                        $.each(data, function (index, employee) {
                            employeeList.append('<option value="' + employee.EmployeeName + '">' + employee.EmployeeName + '</option>');
                        });
                    }
                });
            }
        });*@
        // Handle employee input change
        $('#employee').on('input', function () {
            var inputVal = $(this).val();
            if (inputVal.length > 0) {
                $.ajax({
                    url: '@Url.Action("GetEmployees", "Registration")',
                    type: 'GET',
                    data: { term: inputVal },
                    success: function (data) {
                        var employeeList = $('#employees');
                        employeeList.empty();
                        employeeList.append('<option value="">Select an Employee</option>');
                        $.each(data, function (index, employee) {
                            employeeList.append('<option value="' + employee.EmployeeName + '">' + employee.EmployeeName + '</option>');
                        });
                    }
                });
            }
        });

        // Focus on employee field when department is selected
        $('#department').on('change', function () {
            $('#employee').focus();
        });

        // Focus on submit button when employee is selected
        $('#employee').on('change', function () {
            $('#submit-button').focus();
        });

    });

        function moveToNext(currentInput, event, isLast) {
            if (currentInput.value.length >= 1) {
                if (isLast) {
                    document.getElementById('department').focus();
                } else {
                    let nextInput = currentInput.nextElementSibling;
                    while (nextInput && nextInput.tagName !== 'INPUT') {
                        nextInput = nextInput.nextElementSibling;
                    }
                    if (nextInput && nextInput.classList.contains('otp-input')) {
                        nextInput.focus();
                    }
                }
            }
        }
    </script>
</body>
</html>
